#!/usr/bin/env python

import sys
from PySide import QtCore, QtGui
from PySide.QtCore import QPointF, QRectF

FONT = '-misc-fixed-medium-r-normal--13-120-75-75-c-80-iso8859-1'

SCROLL = 200

class View(QtGui.QGraphicsView):
    def __init__(self, parent=None):
        super(View, self).__init__(parent)
        self.setFrameStyle(0)

        # Disable normal scrolling
        self.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)

        # Scrolling
        self.anim = QtCore.QPropertyAnimation(self, 'sceneRect')
        self.anim.setDuration(1000)
        self.anim.setEasingCurve(QtCore.QEasingCurve.OutQuad)

    def scenesize(self):
        return self.sceneRect().size()

    def scroll(self, size, anim, dist):
        current = anim.currentValue()
        anim.stop()
        if current:
            anim.setEndValue(QRectF(QPointF(0., current.y() + dist), size))
        else:
            anim.setEndValue(QRectF(QPointF(0., dist), size))
        anim.start()

    def keyReleaseEvent(self, event):
        if event.text() == 'k':
            self.scroll(self.scenesize(), self.anim, -SCROLL)
        elif event.text() == 'j':
            self.scroll(self.scenesize(), self.anim, SCROLL)

    def resizeEvent(self, event):
        self.viewsize = event.size()

        self.line = QtGui.QGraphicsLineItem(0., 0., self.viewsize.width(), 0.)
        self.line.setPen(QtGui.QColor(QtCore.Qt.white))
        self.scene().addItem(self.line)

if __name__ == '__main__':
    app = QtGui.QApplication(sys.argv)
    scene = QtGui.QGraphicsScene()
    scene.setBackgroundBrush(QtCore.Qt.black)

    # xlsfonts gets you the list
    font = QtGui.QFont(FONT)
    font.setRawMode(True)
    font.rawName() # Should be there to display the right font, bizarrely

    effects = []
    items = []

    for i in range(24):
        # effects.append(QtGui.QGraphicsBlurEffect())
        # effects[i].setBlurRadius(8)

        items.append(QtGui.QGraphicsTextItem('%02d:00' % i))
        items[i].setDefaultTextColor(QtCore.Qt.white)
        items[i].setFont(font)
        items[i].setPos(0, i * 15)
        # items[i].setGraphicsEffect(effects[i])
        scene.addItem(items[i])

    view = View(scene)
    view.setWindowTitle("Calendar")
    view.show()
    app.exec_()
